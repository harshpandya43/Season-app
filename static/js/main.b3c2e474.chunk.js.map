{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","message","defaultProps","App","state","longs","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","err","src_SeasonDisplay_0","src_Spinner","renderContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACjBC,OAAO,CACHC,KAAK,kCAELC,SAAS,OAEbC,OAAO,CACHF,KAAK,kCACLC,SAAS,eA4BFE,EAfO,SAACC,GACnB,IAVcC,EAAKC,EAUbC,GAVQF,EAUWD,EAAMC,KAVZC,GAUiB,IAAIE,MAAOC,YATtC,GAAKH,EAAM,EACTD,EAAI,EAAI,SAAS,SAEjBA,EAAI,EAAI,SAAS,UAKAK,EAEDZ,EAAaS,GAAhCP,EAFoBU,EAEpBV,KAAMC,EAFcS,EAEdT,SAId,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAC9BI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBd,EAAvB,WACbU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBd,EAAxB,aChCjBe,EAAU,SAACZ,GAEb,OACIO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACVV,EAAMa,WAOvBD,EAAQE,aAAe,CACnBD,QAAU,WAICD,QCdTG,6MASFC,MAAM,CAACf,IAAI,KAAMgB,MAAM,KAAMC,aAAa,uFAEvB,IAAAC,EAAAC,KACfC,OAAOC,UAAUC,YAAYC,mBACzB,SAACC,GACGN,EAAKO,SAAS,CAACzB,IAAIwB,EAASE,OAAOC,WACnCT,EAAKO,SAAS,CAACT,MAAMQ,EAASE,OAAOE,aAEzC,SAACC,GAAQX,EAAKO,SAAS,CAACR,aAAaY,EAAIjB,oDAM7C,OAAGO,KAAKJ,MAAME,eAAiBE,KAAKJ,MAAMf,IAElCM,EAAAC,EAAAC,cAAA,qBAAaW,KAAKJ,MAAME,eAI5BE,KAAKJ,MAAME,cAAgBE,KAAKJ,MAAMf,IAGlCM,EAAAC,EAAAC,cAACsB,EAAD,CAAe9B,IAAKmB,KAAKJ,MAAMf,MAKhCM,EAAAC,EAAAC,cAACuB,EAAD,CAASnB,QAAQ,oEAIxB,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVU,KAAKa,wBA3CJC,IAAMC,WAgDxBC,IAASC,OACL9B,EAAAC,EAAAC,cAAC6B,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.b3c2e474.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from 'react';\r\n\r\nconst seasonConfig = {\r\n    summer:{\r\n        text:'Lets hit the beach BABBYYYYY!!!',\r\n        \r\n        iconName:'sun'\r\n    },\r\n    winter:{\r\n        text:'Bro! It\\'s fucking Chillyyyyy!!!',\r\n        iconName:'snowflake'\r\n    }\r\n};\r\n\r\nconst getSeason =(lat, month)=>{\r\n    if(month>2 && month<9){\r\n        return lat>0 ? 'summer':'winter';\r\n    }else{\r\n        return lat>0 ? 'winter':'summer';\r\n    }\r\n\r\n}\r\n\r\nconst SeasonDisplay = (props) =>{\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    const { text, iconName } = seasonConfig[season];\r\n    // console.log(season);\r\n    // const text = season === 'winter' ? 'Bro! It\\'s fucking Chillyyyyy!!!' : 'Lets hit the beach BABBYYYYY!!!';\r\n    // const icon = season === 'winter' ? 'snowflake' :'sun';\r\n    return(\r\n        <div className={`season-display ${season}`}>\r\n            <i className={`icon-left massive ${iconName} icon`} />\r\n           <h1>{text}</h1>  \r\n           <i className={`icon-right massive ${iconName} icon`} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\n\r\nconst Spinner = (props) =>{\r\n\r\n    return(\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nSpinner.defaultProps = {\r\n    message : \"Loading\"\r\n};\r\n\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay'; \r\nimport Spinner from './Spinner';\r\n\r\nclass App extends React.Component{\r\n\r\n    // This constructor is replaced entirely by componentDidMount() method and state initialization beneath it.\r\n    // constructor(props){\r\n    //     super(props);\r\n\r\n    //     this.state={lat:null, longs:null, errorMessage:''};        \r\n    // }\r\n\r\n    state={lat:null, longs:null, errorMessage:''};\r\n\r\n    componentDidMount(){\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                this.setState({lat:position.coords.latitude});\r\n                this.setState({longs:position.coords.longitude});\r\n            },\r\n            (err) =>{this.setState({errorMessage:err.message});\r\n            }\r\n        );\r\n    }\r\n\r\n    renderContent(){\r\n        if(this.state.errorMessage && !this.state.lat){\r\n            return(\r\n                <div>Error: {this.state.errorMessage}</div>\r\n            );\r\n        }\r\n\r\n        if(!this.state.errorMessage && this.state.lat){\r\n            return(\r\n                // <div>Lat: {this.state.lat} <br/> Long: {this.state.longs}</div>\r\n                <SeasonDisplay lat={this.state.lat} />\r\n                \r\n            );\r\n        }\r\n\r\n        return <Spinner message=\"Please accept location request\"/>;\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"border red\">\r\n                {this.renderContent()}\r\n            </div>\r\n        );        \r\n    }\r\n}\r\nReactDOM.render(\r\n    <App />, document.querySelector('#root')\r\n)"],"sourceRoot":""}